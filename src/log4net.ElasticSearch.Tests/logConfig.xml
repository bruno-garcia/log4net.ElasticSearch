<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>
  <log4net>
    <appender name="ElasticSearchAppender" type="log4net.ElasticSearch.ElasticSearchAppender, log4net.ElasticSearch">
      <Server>localhost</Server>
      <Port>9200</Port>
      <IndexName>log_test_%{+yyyy-MM-dd}</IndexName>
      <IndexType>LogEvent</IndexType>
      <Bulksize>1</Bulksize>
      <BulkIdleTimeout>-1</BulkIdleTimeout>
      <IndexAsync>False</IndexAsync>
      <FixedFields>Partial</FixedFields>
      <Template>
        <Name>template1</Name>
        <FileName>template.json</FileName>
      </Template>
      <ElasticFilters>
        <Add>
          <Key>@type</Key>
          <Value>Special</Value>
        </Add>
        <Add>
          <Key>SmartValue</Key>
          <Value>the type is %{@type}</Value>
        </Add>
        <Remove>
          <Key>@type</Key>
        </Remove>
        <Filter type="log4net.ElasticSearch.Filters.RenameKeyFilter, log4net.ElasticSearch">
          <Key>SmartValue</Key>
          <RenameTo>SmartValue2</RenameTo>
        </Filter>

        <Kv/>

        <Grok>
          <SourceKey>Message</SourceKey>
          <Pattern>name is %{WORD:name} and guid %{UUID:the_guid}</Pattern>
        </Grok>
        <Grok>
          <SourceKey>aa</SourceKey>
          <Pattern>this is id %{INT:tId}</Pattern>
        </Grok>

        <ConvertToArray>
          <SourceKey>someIds</SourceKey>
        </ConvertToArray>
        <ConvertToArray>
          <SourceKey>anotherIds</SourceKey>
        </ConvertToArray>
        
      </ElasticFilters>
    </appender>

    <root>
      <level value="ALL"/>
      <appender-ref ref="ElasticSearchAppender" />
    </root>
  </log4net>
</configuration>